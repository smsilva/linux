#!/bin/bash
cli_help() {
  echo "Arguments"
  echo "  --name"
  echo "  --region"
  echo "  --provider"
  echo ""
  echo "Options"
  echo "  --dry-run"
  exit 1
}

if [ "${WASP_CLI_DEBUG}" == "1" ]; then
  echo "platform_list :: parameters[@] :: [$@]"
  echo "platform_list :: parameters[1] :: [$1]"
  echo "platform_list :: parameters[2] :: [$2]"
fi

while [[ -n "$1" ]]; do case $1 in
  -n | --name )
    PLATFORM_NAME=$2
    shift;
    ;;
  -r | --region )
    PLATFORM_REGION=$2
    shift;
    ;;
  -p | --provider )
    PLATFORM_PROVIDER=$2
    shift;
    ;;
  --dry-run )
    DRY_RUN="yes"
    shift;
    ;;
  --help )
    cli_help
    ;;
esac; shift; done
if [[ "$1" == '--' ]]; then shift; fi

if [ "${WASP_CLI_DEBUG}" == "1" ]; then
  echo "platform_init :: PLATFORM_NAME......: ${PLATFORM_NAME}"
  echo "platform_init :: PLATFORM_REGION....: ${PLATFORM_REGION}"
  echo "platform_init :: PLATFORM_PROVIDER..: ${PLATFORM_PROVIDER}"
fi

PLATFORM_INSTANCES_NAMESPACE="platform-instances"
PLATFORM_NAME="${PLATFORM_NAME-wasp}"
PLATFORM_REGION="${PLATFORM_REGION-centralus}"
PLATFORM_PROVIDER="${PLATFORM_PROVIDER-azure}"
DRY_RUN="${DRY_RUN-no}"

PLATFORM_DIRECTORY="${HOME}/.platform" && mkdir -p "${PLATFORM_DIRECTORY?}"
PLATFORM_YAML_FILE="${PLATFORM_DIRECTORY?}/${PLATFORM_PROVIDER}-${PLATFORM_NAME}-${PLATFORM_REGION}.yaml"

cat <<EOF > "${PLATFORM_YAML_FILE?}"
apiVersion: v1
kind: Namespace
metadata:
  name: ${PLATFORM_INSTANCES_NAMESPACE?}
---
apiVersion: ${PLATFORM_PROVIDER}.silvios.me/v1alpha1
kind: PlatformInstance
metadata:
  name: ${PLATFORM_NAME}
  namespace: ${PLATFORM_INSTANCES_NAMESPACE?}
spec:
  region: ${PLATFORM_REGION}
  compositionSelector:
    matchLabels:
      provider: terraform
  writeConnectionSecretToRef:
    name: ${PLATFORM_NAME}
EOF

if [ "${DRY_RUN}" == "yes" ]; then
  if which yq > /dev/null; then
    yq e - < "${PLATFORM_YAML_FILE?}"
  else
    cat "${PLATFORM_YAML_FILE?}"
  fi
else
  kubectl apply -f "${PLATFORM_YAML_FILE?}"
fi
