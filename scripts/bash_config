user_binarires_directory="${HOME}/bin-${USER##*\\}"
krew_bin_directory="${HOME}/.krew/bin"
npm_packages_bin_directory="${HOME}/.npm-packages/bin"

# Terraform Packager configuration
terraform_packager_directory="${TERRAFORM_PACKAGER_DIRECTORY:-${HOME}/git/terraform-packager}"
terraform_packager_scripts_directory="${terraform_packager_directory}/scripts"
export TERRAFORM_PACKAGER_DIRECTORY="${terraform_packager_directory}"
export LOCAL_TERRAFORM_VARIABLES_DIRECTORY_EXTRA="${HOME}/terraform/input"
export TF_PACKAGER_DOCKER_PROGRESS="auto" # Possible values: plain, auto, tty

if ! grep --quiet ${terraform_packager_scripts_directory} <<< "${PATH}"; then
  PATH=${PATH}:${user_binarires_directory}
  PATH=${PATH}:${terraform_packager_scripts_directory}
  PATH=${PATH}:${krew_bin_directory}
  PATH=${PATH}:${npm_packages_bin_directory}
fi

if which today-fortune &> /dev/null; then
  today-fortune
fi

if [[ -f "${HOME}/.bash_functions" ]]; then
  source "${HOME}/.bash_functions"
fi

if [[ -f /usr/share/powerline/bindings/bash/powerline.sh ]]; then
  powerline-daemon -q
  POWERLINE_BASH_CONTINUATION=1
  POWERLINE_BASH_SELECT=1
  source /usr/share/powerline/bindings/bash/powerline.sh
fi

if [[ -f ~/.fzf.bash ]]; then
  export FZF_DEFAULT_COMMAND="fdfind --type f --follow --exclude .git"
  export FZF_CTRL_T_COMMAND="fdfind --type f --follow --exclude .git"
  export FZF_DEFAULT_OPTS="--height 40% --layout=reverse --border"
  source ~/.fzf.bash
fi

if which kubectl &> /dev/null; then
  export KUBE_EDITOR='code --wait'
  
  source <(kubectl completion bash)
  complete -F __start_kubectl k
fi

if which aws_completer &> /dev/null; then
  AWS_COMPLETER_BINARY=$(which aws_completer)
  complete -C "${AWS_COMPLETER_BINARY}" aws
fi

export CHECKOV_VERSION=2.0.1190

export CREDENTIALS_DIRECTORY="${HOME}/.credentials"
export CREDENTIALS_DIRECTORY_AZURE="${CREDENTIALS_DIRECTORY}/azure"

mkdir --parents "${CREDENTIALS_DIRECTORY_AZURE}"

if [[ -e "${CREDENTIALS_DIRECTORY_AZURE}/current" ]] && [[ ! -e "${CREDENTIALS_DIRECTORY}/bash_azure" ]]; then
  ln -s "${CREDENTIALS_DIRECTORY_AZURE}/current" "${CREDENTIALS_DIRECTORY}/bash_azure"
fi

if [[ -e "${CREDENTIALS_DIRECTORY}" ]]; then
  while read -r bash_file; do
    if [[ -n "${bash_file}" ]]; then
      source "${bash_file}"
    fi
  done <<< "$(find -L "${CREDENTIALS_DIRECTORY}" -maxdepth 1 -type f | sort)"
fi

if [[ -e "${CREDENTIALS_DIRECTORY_AZURE}" ]]; then
  export ARM_SAS_TOKEN_FILE=$(arm-sas-token-file-name)

  if [[ -f "${ARM_SAS_TOKEN_FILE}" ]]; then
    export ARM_SAS_TOKEN="$(arm-sas-token-get)"
  else
    unset ARM_SAS_TOKEN
  fi
fi

export SDKMAN_DIR="${HOME}/.sdkman"

if [[ -f ${SDKMAN_DIR}/bin/sdkman-init.sh ]]; then
  source ${SDKMAN_DIR}/bin/sdkman-init.sh
fi

if [[ -f ${SDKMAN_DIR}/candidates/springboot/current/shell-completion/bash/spring ]]; then
  source ${SDKMAN_DIR}/candidates/springboot/current/shell-completion/bash/spring
fi

export TOKEN_FILE="${TOKEN_FILE:-${HOME}/trash/token}"

if [[ -f "${TOKEN_FILE}" ]]; then
  export TOKEN="$(cat ${TOKEN_FILE})"
fi

export ISTIO_VERSION=1.21.2
export ISTIO_BASE_DIR=${HOME}/istio-${ISTIO_VERSION}

# echo "SHLVL=${SHLVL}"
# echo ${PATH} | tr ":" "\n" | sort
