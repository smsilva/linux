#!/bin/bash
THIS_SCRIPT_NAME="$(basename "${0}")"

cli_help() {
  echo "Arguments"
  echo "  --name"
  echo "  --region"
  echo "  --provider"
  echo ""
  echo "Options"
  echo "  --dry-run [ server | client ]"
  exit 1
}

if [ "${WASP_CLI_DEBUG}" == "1" ]; then
  echo "${THIS_SCRIPT_NAME} :: parameters[@] :: [$@]"
  echo "${THIS_SCRIPT_NAME} :: parameters[1] :: [$1]"
  echo "${THIS_SCRIPT_NAME} :: parameters[2] :: [$2]"
  echo "${THIS_SCRIPT_NAME} :: parameters[3] :: [$3]"
  echo "${THIS_SCRIPT_NAME} :: parameters[4] :: [$4]"
fi

while [[ -n "$1" ]]; do case $1 in
  -n | --name )
    PLATFORM_NAME=$2
    shift;
    ;;
  -r | --region )
    PLATFORM_REGION=$2
    shift;
    ;;
  -p | --provider )
    PLATFORM_PROVIDER=$2
    shift;
    ;;
  --dry-run )
    DRY_RUN="${2-client}"
    shift;
    ;;
  --help )
    cli_help
    ;;
esac; shift; done
if [[ "$1" == '--' ]]; then shift; fi

PLATFORM_INSTANCES_NAMESPACE="default"
PLATFORM_NAME="${PLATFORM_NAME-wasp}"
PLATFORM_REGION="${PLATFORM_REGION-centralus}"
PLATFORM_PROVIDER="${PLATFORM_PROVIDER-azure}"

PLATFORM_DIRECTORY="${HOME}/.platform" && mkdir -p "${PLATFORM_DIRECTORY?}"
PLATFORM_YAML_FILE="${PLATFORM_DIRECTORY?}/${PLATFORM_PROVIDER}-${PLATFORM_NAME}-${PLATFORM_REGION}.yaml"

cat <<EOF > "${PLATFORM_YAML_FILE?}"
apiVersion: silvios.me/v1
kind: PlatformInstance
metadata:
  name: ${PLATFORM_NAME}
spec:
  region: ${PLATFORM_REGION}
  provider: ${PLATFORM_PROVIDER}
EOF

if [ "${WASP_CLI_DEBUG}" == "1" ]; then
  echo ""
  echo "${THIS_SCRIPT_NAME} :: PLATFORM_NAME......: ${PLATFORM_NAME}"
  echo "${THIS_SCRIPT_NAME} :: PLATFORM_REGION....: ${PLATFORM_REGION}"
  echo "${THIS_SCRIPT_NAME} :: PLATFORM_PROVIDER..: ${PLATFORM_PROVIDER}"
  echo "${THIS_SCRIPT_NAME} :: PLATFORM_YAML_FILE.: ${PLATFORM_YAML_FILE}"
  echo "${THIS_SCRIPT_NAME} :: DRY_RUN............: ${DRY_RUN}"
  echo ""

  if which yq > /dev/null; then
    yq e - < "${PLATFORM_YAML_FILE?}"
  else
    cat "${PLATFORM_YAML_FILE?}"
  fi
fi

if [ -n "${DRY_RUN}" ]; then
  kubectl apply -f "${PLATFORM_YAML_FILE?}" --dry-run="${DRY_RUN}"

  echo ""
  echo "Manifests:"
  echo ""
  echo "  ${PLATFORM_YAML_FILE}"
else
  kubectl apply -f "${PLATFORM_YAML_FILE?}"
fi
