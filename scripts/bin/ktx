#!/bin/bash
create_window() {
  window_name=$1
  window_id=$2
  pane_count=$3

  tmux new-window -t ${session_name}:${window_id} -n ${window_name}
  tmux select-window -t ${session_name}:${window_id}
  
  for ((i=1; i < pane_count; i++)); do
    tmux split-window -t ${session_name}:${window_id} -h
    
    mod_value=$(($i % 4))
    
    if [[ ((${mod_value} == 0)) ]]; then
      tmux select-layout -t ${session_name}:${window_id} tiled
    fi
  done

  if [[ ((${pane_count} > 3)) ]]; then
    tmux select-layout -t ${session_name}:${window_id} tiled
  else
    tmux select-layout -t ${session_name}:${window_id} main-horizontal
  fi

  tmux select-pane -t 0
  tmux set-window synchronize-panes
  
  tmux send-keys -t ${session_name}:${window_id}.${_pane} './conn.sh'
}

session_name="k8s"

tmux has-session -t ${session_name} &> /dev/null

if [ $? != 0 ]; then
  if [[ -e Vagrantfile ]]; then
    vagrant status | grep -i "running" > .running
  else
    multipass list | grep -i "running" > .running
  fi

  export NODES=$(cat .running | grep -E "^master|^worker" | awk '{ print $1 }')

  masters_window_id=1
  workers_window_id=2
  all_window_id=3

  servers_count=0
  masters_count=0
  workers_count=0

  for node in ${NODES}; do
    ((servers_count++))
    if [[ ${node} =~ ^master ]]; then
      ((masters_count++))
    else
      ((workers_count++))
    fi
  done

  tmux new-session -s ${session_name} -n 'bash' -d

  create_window "masters" ${masters_window_id} ${masters_count}
  create_window "workers" ${workers_window_id} ${workers_count}
  create_window "all" ${all_window_id} ${servers_count}
    
  tmux select-window -t ${session_name}:${all_window_id}
fi

tmux attach -t ${session_name}
