#!/bin/bash
CERTBOT_COMMAND_FILE="${HOME}/.certbot.bash"

show_usage() {
cat <<EOF

Usage:

  certificate \\
    --email certificates@example.com \\
    --domain sandbox.wasp.silvios.me \\
    --cname apps \\
    --cname services \\
    --cname demo

  certificate \\
    --email certificates@example.com \\
    --domain sandbox.wasp.silvios.me \\
    --cname "*" \\
    --cname "*.apps" \\
    --cname "*.services"

  certificate \\
    --email certificates@example.com \\
    --domain sandbox.wasp.silvios.me \\
    --cname "*" \\
    --cname "*.apps" \\
    --cname "*.services" \\
    --staging

EOF
}

CNAMES=""

while [[ -n "${1}" ]]; do
  case ${1} in
    --domain )
      shift; DOMAIN=${1}
      ;;

    --email )
      shift; CERTBOT_NOTIFICATION_EMAIL=${1}
      ;;

    --cname )
      shift; CNAMES="${CNAMES} ${1}"
      ;;

    --staging )
      SERVER="acme-staging-v02"
      ;;
  esac
  shift
done

if [[ "${1}" == '--' ]]; then
  shift
fi

SERVER=${SERVER-acme-v02}
CERTBOT_ACME_SERVER="${CERTBOT_ACME_SERVER-https://${SERVER?}.api.letsencrypt.org/directory}"

if [ -z "${DOMAIN}"                     ] || \
   [ -z "${DOMAIN}"                     ] || \
   [ -z "${CERTBOT_NOTIFICATION_EMAIL}" ]; then
  show_usage
  exit 1
fi

cat <<EOF > "${CERTBOT_COMMAND_FILE}"
certbot certonly \\
  --manual \\
  --preferred-challenges dns \\
  --agree-tos \\
  --email "${CERTBOT_NOTIFICATION_EMAIL}" \\
  --no-eff-email \\
  --server "${CERTBOT_ACME_SERVER}" \\
EOF

while read -r CNAME; do
  if [ -n "${CNAME}" ]; then
    echo "  -d ${CNAME}.${DOMAIN}" \\>> "${CERTBOT_COMMAND_FILE}"
  fi
done <<< "$(echo "${CNAMES}" | tr " " "\n")"

cat <<EOF >> "${CERTBOT_COMMAND_FILE}"
  --config-dir "\${HOME}/certificates/config" \\
  --work-dir "\${HOME}/certificates/work" \\
  --logs-dir "\${HOME}/certificates/logs"
EOF

echo "" >> "${CERTBOT_COMMAND_FILE}"

echo ""

cat "${CERTBOT_COMMAND_FILE}"

exit 0

openssl pkcs12 \
  -export \
  -inkey "certificate.key.pem" \
  -in    "fullchain.pem" \
  -out   "certificate-combined.pfx"

openssl pkcs12 \
  -in "certificate-combined.pfx" \
  -info

openssl x509 \
  -in "cert1.pem" \
  -noout \
  -text

DOMAIN="httpbin.org"

echo \
| openssl s_client \
  -connect "${DOMAIN?}:443" 2>&1 \
| sed --quiet '/Certificate chain/, /---/p' \
| grep -E "^ [0-9].*"

echo \
| openssl s_client \
  -connect "${DOMAIN?}:443" 2>&1 \
| openssl x509 \
    -noout \
    -text
