#!/bin/bash
show_usage() {
  echo "Kubectl Wait Deployments to become with all Replicas Ready"
  echo ""
  echo "Available Optional Parameters:"
  echo ""
  echo "  -n | --namespace   If this is not informed, the default namespace from current context you be used, if it's empty, then default namespace will be used."
  echo "  -d | --deployments Deployment or Deployment list with comma separated. You could use it more than one time, for example: kwd -n dev -d nginx -d myapp"
  echo "  -a | --attempts    Number of times that the check will be executed. Default is 90."
  echo "  -i | --interval    Interval in seconds until the next attempt. Default is 5 seconds."
  echo ""
  echo "USAGE:"
  echo "  kubectl gs \\"
  echo "    --namespace argocd"
  echo ""
}

NAMESPACE="default"
SECRET_NAME=""

while [[ "$1" =~ ^- && ! "$1" == "--" ]]; do
case $1 in
  -h | --help )
    show_usage
    exit
    ;;
  -n | --namespace )
    shift; NAMESPACE=$1
    ;;
esac; shift; done

if [[ "$1" == '--' ]]; then shift; fi

export NAMESPACE
export SECRET_NAME=$1
export SECRET_KEY_NAME=$2

# echo "1...............: [$1]"
# echo "2...............: [$3]"
# echo "*...............: [$*]"
# echo "@...............: [$@]"
# echo "NAMESPACE.......: [${NAMESPACE}]"
# echo "SECRET_NAME.....: [${SECRET_NAME}]"
# echo "SECRET_KEY_NAME.: [${SECRET_KEY_NAME}]"

if [ -n "${SECRET_KEY_NAME}" ]; then
  JQ_EXPRESSION=$(printf ".%s" "${SECRET_KEY_NAME}")

  SECRET_VALUE=$(kubectl -n ${NAMESPACE} get secret ${SECRET_NAME} -o jsonpath='{.data}' | jq -r "${JQ_EXPRESSION}" | base64 -d)
  echo ${SECRET_VALUE}
else
  if [ -n "${SECRET_NAME}" ]; then
    kubectl -n ${NAMESPACE} get secret ${SECRET_NAME} -o jsonpath='{.data}' | jq .
  else
    kubectl -n ${NAMESPACE} get secret
  fi
fi
