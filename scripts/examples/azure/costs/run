#!/bin/bash
this_script_path="$(realpath ${0})"
this_script_name="${this_script_path##*/}"
this_script_directory="${this_script_path%/*}"

PATH="${this_script_directory}:${PATH}"

show_usage() {
  cat <<EOF
  
  Azure Costs

    Options:

      -h,  --help         Show this help
      -s,  --subscription Subscription ID
      -sd, --start-date   Start date
      -ed, --end-date     End date
     

    Examples:

      ${this_script_name} \\
        --help

      ${this_script_name} \\
        --subscription \${ARM_SUBSCRIPTION_ID} \\
        --start-date "2021-10-01" \\
        --end-date "2021-10-31"

EOF
}

while [[ "$1" =~ ^- && ! "$1" == "--" ]]; do
  case $1 in
    -h | --help )
      show_usage
      exit 1
      ;;

    -s | --subscription )
      shift
      subscription_id="${1}"
      ;;

    -sd | --start-date )
      shift
      start_date="${1}"
      ;;
    
    -ed | --end-date )
      shift
      end_date="${1}"
      ;;

  esac
  shift
done

if [[ "$1" == '--' ]]; then shift; fi

start_date="${start_date-2024-06-01}"
end_date="${end_date-2024-06-30}"

azure_account_list() {
  az account list \
    --query '[].{id: id,name: name}' \
    --output tsv \
  | grep "wasp"
}

rm costs-* &> /dev/null

while read -r subscription_id subscription_description; do
  echo "Subscription: ${subscription_id} ${subscription_description}"

  base_file_name="costs-${subscription_id?}_${start_date?}_${end_date?}"
  data_file_name="${base_file_name?}.json"
  error_file_name="${base_file_name?}.log"

  azure-costs \
    --subscription "${subscription_id?}" \
    --start-date "${start_date?}" \
    --end-date "${end_date?}" > ${data_file_name?} 2> ${error_file_name?}
done < <(azure_account_list)

## Convert json to tsv
while read -r json_file; do
  tsv_file_name="${json_file%.*}.tsv"
  echo "Converting: ${json_file} to ${tsv_file_name}"	
  json-to-tsv "${json_file}" > "${tsv_file_name}"
done < <(find -name 'costs-*.json' 2> /dev/null)

merge-tsv-files > costs-merged.tsv

echo "File costs-merged.tsv created."
