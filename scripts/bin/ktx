#!/bin/bash

if [[ ! -e Vagrantfile ]]; then
  echo "It couldn't possible to find a Vagrantfile. Maybe a wrong directory?"
  exit 1
fi

vagrant status | grep running > .running

create_window() {
  WINDOW_NAME=$1
  WINDOW_ID=$2
  PANE_COUNT=$3

  tmux new-window -t ${SESSION_NAME}:${WINDOW_ID} -n ${WINDOW_NAME}
  tmux select-window -t ${SESSION_NAME}:${WINDOW_ID}
  
  for ((i=1; i < PANE_COUNT; i++)); do
    tmux split-window -t ${SESSION_NAME}:${WINDOW_ID} -h
    
    MOD_VALUE=$(($i % 4))
    
    if [[ ((${MOD_VALUE} == 0)) ]]; then
      tmux select-layout -t ${SESSION_NAME}:${WINDOW_ID} tiled
    fi
  done

  if [[ ((${PANE_COUNT} > 3)) ]]; then
    tmux select-layout -t ${SESSION_NAME}:${WINDOW_ID} tiled
  else
    tmux select-layout -t ${SESSION_NAME}:${WINDOW_ID} main-horizontal
  fi

  tmux select-pane -t 0
  tmux set-window synchronize-panes
  
  tmux send-keys -t ${SESSION_NAME}:${WINDOW_ID}.${_pane} './conn.sh'
}

SESSION_NAME="k8s"

tmux has-session -t ${SESSION_NAME} &> /dev/null

if [ $? != 0 ]; then
  export NODES=$(cat .running | grep -E "^master|^worker" | awk '{ print $1 }')

  MASTERS_WINDOW_ID=1
  WORKERS_WINDOW_ID=2
  ALL_WINDOW_ID=3

  SERVERS_COUNT=0
  MASTERS_COUNT=0
  WORKERS_COUNT=0

  for node in ${NODES}; do
    ((SERVERS_COUNT++))
    if [[ ${node} =~ ^master ]]; then
      ((MASTERS_COUNT++))
    else
      ((WORKERS_COUNT++))
    fi
  done

  tmux new-session -s ${SESSION_NAME} -n 'bash' -d

  create_window "masters" ${MASTERS_WINDOW_ID} ${MASTERS_COUNT}
  create_window "workers" ${WORKERS_WINDOW_ID} ${WORKERS_COUNT}
  create_window "all" ${ALL_WINDOW_ID} ${SERVERS_COUNT}
    
  tmux select-window -t ${SESSION_NAME}:${ALL_WINDOW_ID}
fi

tmux attach -t ${SESSION_NAME}
