#!/bin/bash
export AZURE_SUBSCRIPTION_NAME_INPUT="${1}"
export AZURE_CREDENTIALS_DIRECTORY="${CREDENTIALS_DIRECTORY?}/azure"
export AZURE_CREDENTIALS_CURRENT_FILE="${AZURE_CREDENTIALS_DIRECTORY?}/current"

create_initial_subscription_credentials_file() {
  mkdir --parents "${AZURE_CREDENTIALS_DIRECTORY}"

  export AZURE_STORAGE_ACCOUNT_NAME="waspfoundation$(awk -F '-' '{ print $1 }' <<< "${AZURE_SUBSCRIPTION_ID}")"
  export AZURE_KEYVAULT_NAME="${AZURE_STORAGE_ACCOUNT_NAME}"

  cat <<EOF > "${AZURE_CREDENTIALS_SUBSCRIPTION_FILE}"
export ARM_TENANT_ID="${AZURE_TENANT_ID}"
export ARM_SUBSCRIPTION_ID="${AZURE_SUBSCRIPTION_ID}"
export ARM_SUBSCRIPTION_NAME="${AZURE_SUBSCRIPTION_NAME}"
export ARM_CLIENT_ID="SERVICE_PRINCIPAL_ID_HERE"
export ARM_CLIENT_SECRET="SERVICE_PRINCIPAL_CLIENT_SECRET_HERE"
export ARM_STORAGE_ACCOUNT_NAME="${AZURE_STORAGE_ACCOUNT_NAME}"
export ARM_STORAGE_ACCOUNT_CONTAINER_NAME="terraform"
export ARM_KEYVAULT_NAME="${AZURE_KEYVAULT_NAME}"
unset ARM_ACCESS_KEY
EOF

  chmod +x "${AZURE_CREDENTIALS_SUBSCRIPTION_FILE}"
}

change_active_subscription() {
  az account set \
    --subscription "${AZURE_SUBSCRIPTION_NAME}"

  export AZURE_SUBSCRIPTION_ID=$(az account show \
    --output tsv \
    --query id)

  export AZURE_TENANT_ID=$(az account show \
    --output tsv \
    --query tenantId)

  export AZURE_CREDENTIALS_SUBSCRIPTION_FILE="${AZURE_CREDENTIALS_DIRECTORY?}/${AZURE_SUBSCRIPTION_ID}"

  if [ ! -e "${AZURE_CREDENTIALS_SUBSCRIPTION_FILE}" ]; then
    create_initial_subscription_credentials_file
  fi

  cp "${AZURE_CREDENTIALS_SUBSCRIPTION_FILE?}" "${AZURE_CREDENTIALS_CURRENT_FILE?}"

  source "${AZURE_CREDENTIALS_CURRENT_FILE?}"

  export ARM_SAS_TOKEN="$(arm-sas-token-get)"

  arm
}

# Create a temporary file to store the Azure Subscription List
AZURE_SUBSCRIPTION_LIST=$(mktemp)

# Retrieve Azure Subscription List and save it to the temporary file
az account list \
  --query "[].name" \
  --output tsv > "${AZURE_SUBSCRIPTION_LIST}"

# If no input is provided
if [[ -z "${AZURE_SUBSCRIPTION_NAME_INPUT}" ]]; then
  # Use fzf to select the subscription
  export AZURE_SUBSCRIPTION_NAME="$(cat ${AZURE_SUBSCRIPTION_LIST?} | fzf)"
else
  # Retrieve the number of records that match the provided input
  RECORD_COUNT=$(grep --extended-regexp "${AZURE_SUBSCRIPTION_NAME_INPUT}" ${AZURE_SUBSCRIPTION_LIST?} | wc -l)

  # Check if the input is unique
  if [[ ${RECORD_COUNT} -eq 1 ]]; then
    # If input is unique, use it as the subscription
    export AZURE_SUBSCRIPTION_NAME="${AZURE_SUBSCRIPTION_NAME_INPUT}"
  else
    # If input is not unique, use fzf to select the subscription
    export AZURE_SUBSCRIPTION_NAME="$(grep --extended-regexp "${AZURE_SUBSCRIPTION_NAME_INPUT}" ${AZURE_SUBSCRIPTION_LIST?} | fzf)"
  fi
fi

# If subscription is selected, change the active subscription
if [[ -n "${AZURE_SUBSCRIPTION_NAME}" ]]; then
  change_active_subscription
fi
